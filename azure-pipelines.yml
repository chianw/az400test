jobs:
- deployment: deploy
  displayName: Deploy with Terraform
  pool: 
    vmImage: ubuntu-latest 
  environment: dev
  strategy:
    runOnce:
      deploy:
        steps:
        - checkout: self
          displayName: Checkout Terraform Module
        - task: TerraformInstaller@0
          displayName: Install Terraform
          inputs:
            terraformVersion: 'latest'
        - task: TerraformTaskV4@4
          displayName: Terraform Init
          inputs:
            provider: 'azurerm'
            command: 'init'
            backendAzureRmUseEntraIdForAuthentication: true
            backendServiceArm: 'sc-subcription10'
            backendAzureRmResourceGroupName: 'az400rg'
            backendAzureRmStorageAccountName: 'az400tfstate12'
            backendAzureRmContainerName: 'tfstate'
            backendAzureRmKey: 'terraform.tfstate'
        # - task: TerraformTaskV4@4
        #   displayName: Terraform Init
        #   inputs:
        #     provider: 'azurerm'
        #     command: 'init'
        #     workingDirectory: '$(workingDirectory)'
        #     backendServiceArm: '$(serviceConnection)'
        #     backendAzureRmResourceGroupName: '$(BACKEND_AZURE_RESOURCE_GROUP_NAME)'
        #     backendAzureRmStorageAccountName: '$(BACKEND_AZURE_STORAGE_ACCOUNT_NAME)'
        #     backendAzureRmContainerName: '$(BACKEND_AZURE_STORAGE_ACCOUNT_CONTAINER_NAME)'
        #     backendAzureRmKey: 'terraform.tfstate'
        #   env:
        #     ARM_USE_AZUREAD: true # This environment variable tells the backend to use AzureAD auth rather than trying a create a key. It means we can limit the permissions applied to the storage account and container to least priviledge: https://developer.hashicorp.com/terraform/language/settings/backends/azurerm#use_azuread_auth
        - task: TerraformTaskV4@4
          displayName: Terraform Apply
          inputs:
            provider: 'azurerm'
            command: 'apply'
            workingDirectory: '$(workingDirectory)'
            commandOptions: '-auto-approve -var="resource_group_name=$(AZURE_RESOURCE_GROUP_NAME)"'
            environmentServiceNameAzureRM: '${{ variables.serviceConnection }}'
          env:
            ARM_USE_AZUREAD: true